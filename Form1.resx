<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAMAAAAAAAEAIADEFwAANgAAAAAAAgABAAEAngkAAPoXAAAAAAIAAQABAFgDAACYIQAAiVBORw0K
        GgoAAAANSUhEUgAAAP8AAAFTCAYAAAD2odrrAAAXi0lEQVR4nO3dd7hdVZ3G8e9NICEQIAEChE7oXUoo
        AUSKMg4dBRwLBsRBcSgiRQeYAWakOI4IIypFQSkPZQClRmnSQwsdpHdIQg2EJKTc4x8rJxzIvTfn7P37
        rbX2Oe/nedbjo8Le71p3r3P23mcVEBERERERERERERERERERERERERERERERERERERERERERERERERER
        ERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERER
        ERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERERER
        EREREREREREREREREREREREREREREREREREREREREREREREREREREREREREREREREREREZHIulIHMDAO
        2DDCebqBWcBMYBowFZgMfAC8B7wNTAReA14Fngeemf3/V81I4L7UIRLYAHg0dYhY5ksdoKTBwPqRztVv
        dpkfGAQMbfLfewV4GLgHuAMYS/gQydmo1AES+BB4PHUIad4OQK1i5V3gEuCbhA+vHF1K+naKXW40abkK
        6Zc6QElbpg5QwFBgH+ACYDzwR2CbpInm1onf/HenDiCt+SvpvzGsylhgF9K/h1mO9G2Rouxo0XgSRz/C
        y7TUF411uRNY17CdWrVPL7naucwCFrVovCqp8m3/+sDCqUM42BJ4CDiRNH+fTrzlfxKYlDpEbFXu/FV8
        3m/WfMBxwA3A4pHPvUXk8+WgI5/31fnz9iXgQWDtSOcbBHwu0rlyck/qACmo8+dvReAW4nwAjCSMY+g0
        +uavkOWAFVKHiGgpwgfAWs7n6cTn/bcJIzE7TlU7f6d86zdaCrgWGOJ4jk7s/B15yw/q/FUzAvgDfmMB
        Nnc6bs468pYf1PmraFfgMIfjrg4Mczhu7jq286ceTVbEYOB9oL/hMVckTMD5rC7CC7D5gQUIt9xDZ//z
        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
        i4J6PNcWXSHXcjJPjuXggu3ixWMyT7s/ts1hPQFlJuVfmrViO+P89TKW1l/6jHDKklOxfqtelvVknrFx
        49soettvfZv6CM0t1GnlFuB6h+NuRtiGuRXtfss/lfD3zUkVH1nN5dL5UzTekcAsh+OeTGu3gO3e+TW4
        J1Od3PmfBH7ncNzlgSNa+OfbvfPn9rJvCcIzvyWvwWlZsp6Asnzc+HMsBXzYZMZWymRgmSbO3wmTeXZv
        oh1isp7M83zc+CIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiIiImLsHz7K
        nZ9FpeJeAAAAAElFTkSuQmCCiVBORw0KGgoAAAANSUhEUgAAAP8AAAFTCAYAAAD2odrrAAAJZUlEQVR4
        nO3dzXocNRCGUZmHa87tm0USCM44np+WVKXvnA2soLtGr9Tt4OHt27dvA8jz1+4LAPYQP4QSP4QSP4QS
        P4QSP4QSP4QSP4QSP4QSP4QSP4QSP4QSP4QSP4QSP4QSP4QSP4QSP4QSP4QSP4QSP4QSP4QSP4QSP4QS
        P4QSP4QSP4QSP4QSP4QSP4QSP4QSP4QSP4QSP4QSP4QSP4QSP4QSP4QSP4QSP4QSP4QSP4QSP4QSP4QS
        P4QSP4QSP4QSP4QSP4QSP4QSP4QSP4QSP4QSP4QSP4QSP4QSP4QSP4QSP4QSP4QSP4QSP4QSP4QSP4QS
        P4QSP4QSP4QSP4QSP4QSP4QSP4QSP4QSP4QSP4QSP4QSP4QSP4QSP4QSP4QSP4QSP4QSP4QSP4QSP4QS
        P4QSP4QSP4QSP4QSP4QSP4QSP4QSP4QSP4QSP4QSP4QSP4QSP4QSP4QSP4QSP4QSP4QSP4QSP4QSP4QS
        P4QSP4T6e/cFXOB99wV84W33BTyh+kxn6vh5PaV7/B0W6a1rjFlg1NU9/q5+3RBsBHVEfRbe+fd7Hz2e
        YDiMk7+OKk8DNqIQnU/+kxfpyfdGEZ3jP53XgbWi3vfHEH8HNgCmEH8PqzYAG00Q8fchTC7VNf7UEFLv
        e7a49/0x+safzAbAJcTfkw2Al4mfn2woYTr+F36zFumt977KQbyP0HdVrtEx/hk+i+jeuCpvEvequJGs
        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
        pz/ztVpj1eJvNbwPnN5/1vmzPVK1+GezAOGHtPhnc/r34HMaz8ffeXizT/9HZ9N5lvyn3VNlpZN/5fDa
        fVBwtUrxn8Rp/n8224KS47cgM9mYf0iOf7Z7FpmFeIaWB8mzv9Lb8mZv2H0fu//9icz8Byc/hBI/hBI/
        hBI/hBI/hBI/hBI/hBI/hBI/hBI/hBI/hBI/hBI/hBI/hBI/hBI/hBI/hBI/hBI/hBI/hBI/hBI/hPoH
        3qEBeHP4+t8AAAAASUVORK5CYIKJUE5HDQoaCgAAAA1JSERSAAABAAAAAQAIBgAAAFxyqGYAAAMfSURB
        VHic7dQxAQAgDMAwwOf8ywAZHE0U9OqembuApPM7APjHACDMACDMACDMACDMACDMACDMACDMACDMACDM
        ACDMACDMACDMACDMACDMACDMACDMACDMACDMACDMACDMACDMACDMACDMACDMACDMACDMACDMACDMACDM
        ACDMACDMACDMACDMACDMACDMACDMACDMACDMACDMACDMACDMACDMACDMACDMACDMACDMACDMACDMACDM
        ACDMACDMACDMACDMACDMACDMACDMACDMACDMACDMACDMACDMACDMACDMACDMACDMACDMACDMACDMACDM
        ACDMACDMACDMACDMACDMACDMACDMACDMACDMACDMACDMACDMACDMACDMACDMACDMACDMACDMACDMACDM
        ACDMACDMACDMACDMACDMACDMACDMACDMACDMACDMACDMACDMACDMACDMACDMACDMACDMACDMACDMACDM
        ACDMACDMACDMACDMACDMACDMACDMACDMACDMACDMACDMACDMACDMACDMACDMACDMACDMACDMACDMACDM
        ACDMACDMACDMACDMACDMACDMACDMACDMACDMACDMACDMACDMACDMACDMACDMACDMACDMACDMACDMACDM
        ACDMACDMACDMACDMACDMACDMACDMACDMACDMACDMACDMACDMACDMACDMACDMACDMACDMACDMACDMACDM
        ACDMACDMACDMACDMACDMACDMACDMACDMACDMACDMACDMACDMACDMACDMACDMACDMACDMACDMACDMACDM
        ACDMACDMACDMACDMACDMACDMACDMACDMACDMACDMACDMACDMACDMACDMACDMACDMACDMACDMACDMACDM
        ACDMACDMACDMACDMACDMACDMACDMACDMACDMACDMACDMACDMACDMACDMACDMACDMACDMACDMACDMACDM
        ACDMACDMACDMACDMACDMACDMACDMACDMACDMACDMACDMACDMACDMACDMACDMACDMACDMACDMACDMACDM
        ACDMACDMACDMACDMACDsAcpnBBYTTtuiAAAAAElFTkSuQmCC
</value>
  </data>
</root>